unit UnCadEscola;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, WideStrings, FMTBcd, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxContainer, cxEdit, cxDBEdit, cxTextEdit, cxMaskEdit,
  cxSpinEdit, StdCtrls, DB, SqlExpr, Grids, DBGrids, Provider, DBClient,
  ExtCtrls, DBCtrls, unDados, unCadastroEscolaController, ADODB, ComCtrls, Mask,
  JvExMask, JvToolEdit, JvDBControls, cxDropDownEdit, cxCalendar;

type
  TfrmCadEscola = class(TForm)
    lblEscolaCodigo: TLabel;
    lblEscolaNome: TLabel;
    DBEditEscolaNome: TcxDBTextEdit;
    lblEscolaDataCadastro: TLabel;
    lblEscolaEndRua: TLabel;
    DBEditEscolaEndRua: TcxDBTextEdit;
    lblEscolaEndNumero: TLabel;
    lblEscolaEndComplemento: TLabel;
    DBEditEscolaEndComplemento: TcxDBTextEdit;
    lblEscolaEndBairro: TLabel;
    DBEditEscolaEndBairro: TcxDBTextEdit;
    lblEscolaEndCidade: TLabel;
    DBEditEscolaEndCidade: TcxDBTextEdit;
    lblEscolaendCep: TLabel;
    DBGridListaEscola: TDBGrid;
    DBEditEscolaEndNumero: TcxDBTextEdit;
    lblEscolaFrmTitulo: TLabel;
    btnEscolaNovoCadastro: TButton;
    btnEscolaGravar: TButton;
    btnEscolaAlterar: TButton;
    btnEscolaExcluir: TButton;
    btnEscolaCancelar: TButton;
    btnEscolaLimpar: TButton;
    DBEditEscolaCod: TcxDBTextEdit;
    edtEscolaBuscarCodigo: TEdit;
    btnEscolaBuscar: TButton;
    rgImpressao: TRadioGroup;
    rbTela: TRadioButton;
    rbImpressora: TRadioButton;
    btnEscolaImprimir: TButton;
    dtpEscolaBuscarData: TDateTimePicker;
    DBDateEditEscolaDataCadastro: TcxDBDateEdit;
    DBMaskEditEscolaEndCEP: TcxDBMaskEdit;
    ComboBoxEscolaConsultaOrdenada: TComboBox;
    lblEscolaConsultaOrdenada: TLabel;
    procedure btnEscolaNovoCadastroClick(Sender: TObject);
    procedure btnEscolaGravarClick(Sender: TObject);
    procedure btnEscolaCancelarClick(Sender: TObject);
    procedure DesabilitarComponentesDados;
    procedure btnEscolaLimparClick(Sender: TObject);
    procedure btnEscolaExcluirClick(Sender: TObject);
    procedure btnEscolaAlterarClick(Sender: TObject);
    procedure btnEscolaBuscarClick(Sender: TObject);
    procedure btnEscolaImprimirClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure edtEscolaBuscarCodigoChange(Sender: TObject);
    procedure edtEscolaBuscarCodigoKeyPress(Sender: TObject; var Key: Char);
    procedure dtpEscolaBuscarDataKeyPress(Sender: TObject; var Key: Char);
    procedure AvancarCampo(Sender: TObject; var Key: Char);
    procedure ComboBoxEscolaConsultaOrdenadaChange(Sender: TObject);
  private
    procedure AtribuicaoCampoData(Sender: TField; const Text: string);
    procedure ConsultaOrdenada;
    { Private declarations }
  public
    { Public declarations }
    FController: TCadastroEscolaController;
    procedure HabilitarComponentesDados;
    procedure LimparCampos;
    procedure AfterConstruction; override;
    destructor Destroy; override;
    function CamposValidados: Boolean;
  end;

var
  frmCadEscola: TfrmCadEscola;

implementation

uses
  unRelEscola;

{$R *.dfm}

procedure TfrmCadEscola.AfterConstruction;
begin
  inherited;
  FController := TCadastroEscolaController.Create;
end;

procedure TfrmCadEscola.ComboBoxEscolaConsultaOrdenadaChange(Sender: TObject);
begin
  ConsultaOrdenada;
end;

procedure TfrmCadEscola.ConsultaOrdenada;
begin
  case ComboBoxEscolaConsultaOrdenada.ItemIndex of
    0: fmdados.tbdsEscola.IndexFieldNames := 'ESCCOD';
    1: fmdados.tbdsEscola.IndexFieldNames := 'ESCNOME';
    2: fmdados.tbdsEscola.IndexFieldNames := 'ESCDATACAD';
  end;
end;


procedure TfrmCadEscola.btnEscolaNovoCadastroClick(Sender: TObject);
begin
  fmdados.tbdsEscola.Append;
  HabilitarComponentesDados;
  LimparCampos;
  fmdados.tbdsEscolaESCCOD.AsInteger := FController.DevolverUltimoCodigo + 1;
  btnEscolaExcluir.Enabled := False;
  btnEscolaImprimir.Enabled := False;
  btnEscolaBuscar.Enabled := False;
  edtEscolaBuscarCodigo.Enabled := False;
  dtPEscolaBuscarData.Enabled := False;
  ComboBoxEscolaConsultaOrdenada.Enabled := False;
  DBDateEditEscolaDataCadastro.Text := FormatDateTime('DD/MM/YYYY', Now);

end;

procedure TfrmCadEscola.btnEscolaAlterarClick(Sender: TObject);
begin
  fmdados.tbdsEscola.Edit;
  HabilitarComponentesDados;
  btnEscolaExcluir.Enabled := False;
  btnEscolaImprimir.Enabled := False;
  btnEscolaBuscar.Enabled := False;
  edtEscolaBuscarCodigo.Enabled := False;
  ComboBoxEscolaConsultaOrdenada.Enabled := False;
end;

procedure TfrmCadEscola.btnEscolaBuscarClick(Sender: TObject);
begin
  fmdados.tbdsEscola.Filtered := False;
  if edtEscolaBuscarCodigo.Text <> '' then
  begin
    if fmdados.tbdsEscola.Locate('ESCCOD', edtEscolaBuscarCodigo.Text, [LopartialKey]) then
    begin
      fmdados.tbdsEscola.Filtered := False;
      fmdados.tbdsEscola.Filter := 'ESCCOD = ' + QuotedStr(edtEscolaBuscarCodigo.Text);
      fmdados.tbdsEscola.Filtered := True;
    end
    else
    begin
      ShowMessage('Registro não localizado. Verifique o código digitado e tente novamente.');
      edtEscolaBuscarCodigo.SetFocus;
    end;
  end
  else
  begin
    if not fmdados.tbdsEscola.Locate('ESCDATACAD',
      FormatDateTime('DD/MM/YYYY', dtpEscolaBuscarData.Date), [LopartialKey]) then
    begin
      ShowMessage('Registro não localizado. Verifique a data consultada e tente novamente.');
      dtpEscolaBuscarData.SetFocus;
    end
    else
    begin
      fmdados.tbdsEscola.Filtered := False;
      fmdados.tbdsEscola.Filter := 'ESCDATACAD = ' + QuotedStr(
        FormatDateTime('DD/MM/YYYY', dtpEscolaBuscarData.Date));
      fmdados.tbdsEscola.Filtered := True;
    end;
  end;

end;

procedure TfrmCadEscola.btnEscolaCancelarClick(Sender: TObject);
begin
  if MessageDlg('Tem certeza que deseja cancelar a edição deste registro?', mtConfirmation,
    mbYesNo, 0) = mrYes then
  begin
    fmdados.tbdsEscola.Cancel;
    DesabilitarComponentesDados;
    btnEscolaBuscar.Enabled := True;
    edtEscolaBuscarCodigo.Enabled := True;
    dtpEscolaBuscarData.Enabled := True;
    btnEscolaImprimir.Enabled := True;
    btnEscolaExcluir.Enabled := True;
  end;
end;

procedure TfrmCadEscola.btnEscolaExcluirClick(Sender: TObject);
begin
  if MessageDlg('Tem certeza que deseja excluir este registro?', mtConfirmation,
    mbYesNo, 0) = mrYes then
  begin
    fmdados.tbdsEscola.Delete;
    fmdados.tbdsEscola.ApplyUpdates(0);
    fmdados.tbdsEscola.Refresh;
    ShowMessage('Registro excluído com sucesso!');
  end;
end;

function TfrmCadEscola.CamposValidados: Boolean;
var
  i :Integer;
  Campos :TStrings;
begin
  Campos := TStringList.Create;
  try
    for i := 0 to fmdados.tbdsEscola.Fields.Count - 1 do
    begin
      if (fmdados.tbdsEscola.Fields[i].Tag = 1) and
        (fmdados.tbdsEscola.Fields[i].AsString = EmptyStr) then
        Campos.Add('- ' + fmdados.tbdsEscola.Fields[i].DisplayName)
    end;
    if (Campos.Count > 0) then
    begin
      Result := False;
      ShowMessage('Preencha os campos obrigatórios:' + #13 + #13 + Campos.Text);
    end
    else
      Result := True;
    finally
      Campos.Free;
    end;
end;

procedure TfrmCadEscola.btnEscolaGravarClick(Sender: TObject);
begin
  if CamposValidados then
    if MessageDlg('Tem certeza que deseja gravar este registro?', mtConfirmation,
      mbYesNo, 0) = mrYes then
    begin
      fmdados.tbdsEscola.Post;
      fmdados.tbdsEscola.ApplyUpdates(0);
      DesabilitarComponentesDados;
      btnEscolaExcluir.Enabled := True;
      btnEscolaImprimir.Enabled := True;
      btnEscolaCancelar.Enabled := False;
      btnEscolaBuscar.Enabled := True;
      edtEscolaBuscarCodigo.Enabled := True;
      dtpEscolaBuscarData.Enabled := True;
      ComboBoxEscolaConsultaOrdenada.Enabled := True;
      LimparCampos;
      ShowMessage('Registro gravado com sucesso!');
    end
end;

destructor TfrmCadEscola.Destroy;
begin
  FreeAndNil(FController);
  inherited;
end;

procedure TfrmCadEscola.dtpEscolaBuscarDataKeyPress(Sender: TObject;
  var Key: Char);
begin
  if Key = #13 then
    btnEscolaBuscarClick(Sender)
end;

procedure TfrmCadEscola.edtEscolaBuscarCodigoChange(Sender: TObject);
begin
  if (edtEscolaBuscarCodigo.Text = EmptyStr) then
    fmdados.tbdsEscola.Filtered := False;
end;

procedure TfrmCadEscola.edtEscolaBuscarCodigoKeyPress(Sender: TObject;
  var Key: Char);
var
  keyAux: Char;
begin
  keyAux := Key;
  if not (Key in ['0'..'9', #8]) then
    Key := #0;
  if keyAux = #13 then
    btnEscolaBuscarClick(Sender)
end;

procedure TfrmCadEscola.btnEscolaImprimirClick(Sender: TObject);
begin
  frmRelEscola := TfrmRelEscola.Create(Application);
  if rbTela.Checked then
    frmRelEscola.RLReportEscola.Preview()
  else
    frmRelEscola.RLReportEscola.Print
end;

procedure TfrmCadEscola.btnEscolaLimparClick(Sender: TObject);
begin
  if MessageDlg('Tem certeza que deseja limpar os campos?', mtConfirmation,
    mbYesNo, 0) = mrYes then
    LimparCampos
end;

procedure TfrmCadEscola.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  fmdados.tbdsEscola.Close;
end;

procedure TfrmCadEscola.FormShow(Sender: TObject);
begin
  fmdados.tbdsEscola.Open;
  fmdados.tbdsEscolaESCDATACAD.OnSetText := AtribuicaoCampoData;
end;

procedure TfrmCadEscola.AtribuicaoCampoData(Sender: TField;
  const Text: string);
begin
  try
    StrToDate(DBDateEditEscolaDataCadastro.Text);
  except
    ShowMessage('Data Inválida');
    DBDateEditEscolaDataCadastro.SetFocus;
  end;
end;

procedure TfrmCadEscola.AvancarCampo(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    Perform(WM_nextdlgctl,0,0)
  else
  if Key = #27 then
    Perform(WM_nextdlgctl,1,0)
end;

procedure TfrmCadEscola.DesabilitarComponentesDados;
begin
  btnEscolaNovoCadastro.Enabled := True;
  btnEscolaGravar.Enabled := False;
  btnEscolaLimpar.Enabled := False;
  btnEscolaAlterar.Enabled := True;
  btnEscolaCancelar.Enabled := False;
  btnEscolaExcluir.Enabled := False;
  btnEscolaImprimir.Enabled := False;
  DBEditEscolaCod.Enabled := False;
  DBEditEscolaNome.Enabled := False;
  DBEditEscolaEndRua.Enabled := False;
  DBEditEscolaEndNumero.Enabled := False;
  DBEditEscolaEndComplemento.Enabled := False;
  DBEditEscolaEndCidade.Enabled := False;
  DBMaskEditEscolaEndCEP.Enabled := False;
  DBEditEscolaEndBairro.Enabled := False;
  DBGridListaEscola.Enabled := True;
end;

procedure TfrmCadEscola.HabilitarComponentesDados;
begin
  btnEscolaNovoCadastro.Enabled := False;
  btnEscolaGravar.Enabled := True;
  btnEscolaLimpar.Enabled := True;
  btnEscolaAlterar.Enabled := False;
  btnEscolaCancelar.Enabled := True;
  DBEditEscolaNome.Enabled := True;
  DBEditEscolaEndRua.Enabled := True;
  DBEditEscolaEndNumero.Enabled := True;
  DBEditEscolaEndComplemento.Enabled := True;
  DBEditEscolaEndCidade.Enabled := True;
  DBMaskEditEscolaEndCEP.Enabled := True;
  DBEditEscolaEndBairro.Enabled := True;
  DBGridListaEscola.Enabled := False;
  DBEditEscolaNome.SetFocus;
end;

procedure TfrmCadEscola.LimparCampos;
begin
  DBEditEscolaCod.Clear;
  DBEditEscolaNome.Clear;
  DBDateEditEscolaDataCadastro.Clear;
  DBEditEscolaEndRua.Clear;
  DBEditEscolaEndNumero.Clear;
  DBEditEscolaEndComplemento.Clear;
  DBEditEscolaEndCidade.Clear;
  DBMaskEditEscolaEndCEP.Clear;
  DBEditEscolaEndBairro.Clear;
end;

end.
